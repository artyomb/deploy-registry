- if params[:group]
  ruby:
    columns = Deploy.columns
    current_group = params[:group]
    group_label = 'Host'
    group_deploys = DB["
      SELECT * FROM (
        SELECT *, ROW_NUMBER() OVER (PARTITION BY stack_name ORDER BY id DESC) as rn
        FROM deploys WHERE deploy_host = ?
      ) t WHERE rn = 1
      ORDER BY ID DESC
    ", current_group].all
    header_suffix = ''
    insight_url = '#'
    has_valid_stack_insight = false
    group_deploys.each do |d|
      if d[:stack_name] == 'stack-insight'
        begin
          stack_data = JSON.parse(d[:stack])
          stack_data = JSON.parse(stack_data) if stack_data.is_a?(String)
          main_key = 'traefik.http.routers.stack-insight_stack_insight-0.tls.domains[0].main'
          rule_key = 'traefik.http.routers.stack-insight_stack_insight-0.rule'
          traefik_values = find_traefik_values(stack_data, main_key, rule_key)
          if traefik_values[:main] && traefik_values[:rule]
            has_valid_stack_insight = true
            domain = traefik_values[:main].start_with?('http://', 'https://') ? traefik_values[:main] : "https://#{traefik_values[:main]}"
            clean_domain = domain.sub(/^https?:\/\//, '').sub(/^insight\./, '')
            if traefik_values[:rule].match(/HostRegexp\s*\(`{name:insight\.\.[^\}]*}\`\)/)
              header_suffix = " (#{clean_domain})"
              insight_url = domain
            elsif traefik_values[:rule].match(/PathPrefix\s*\(`([^`]+)`\)/)
              path = $1
              header_suffix = " (#{clean_domain}#{path})"
              insight_url = "https://insight.#{clean_domain}#{path}"
            end
          end
        end
      end
    end

  h1
    | #{group_label}:
    - if has_valid_stack_insight
      a href=insight_url #{current_group}
    - else
      | #{current_group}
    | #{header_suffix}
  pre: table
    tr
      - columns.each do |k|
        th = k.to_s.gsub('_', ' ').capitalize
    - group_deploys.each do |d|
      - next unless d[:deploy_status]
      tr class="status-#{d[:deploy_status]}"
        - columns.each do |k|
          - if k == :stack_name
            td = d[:stack_name]
          - elsif k == :stack
            td: a href="/inspect?id=#{d[:id]}&stack_name=#{d[:stack_name]}" #{d[:stack]}
          - else
            td == d[k]

sass:
  .stack-part
    color: #666
    font-weight: normal

  table
    width: 100%
    border-collapse: collapse
    th, td
      padding: 8px
      border: 1px solid #ddd
    tr:nth-child(even)
      background-color: #f2f2f2
    tr.status-failed
      background-color: #ffdddd
    tr.status-success
      background-color: #ddffdd